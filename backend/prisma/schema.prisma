// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator nestgraphql {
  provider = "prisma-nestjs-graphql"
  output   = "../src/prisma/@generated/prisma-nestjs-graphql"
}

/// @ObjectType('UserEntity')
model User {
  /// id
  id        Int      @id @default(autoincrement())
  /// uuid
  uuid      String   @unique @default(uuid())
  /// メールアドレス
  email     String   @unique
  /// パスワード
  /// @HideField()
  password  String
  /// 名前
  name      String
  /// ユーザーが投稿した記事
  posts     Post[]
  ///ユーザーの作成日
  /// @HideField()
  createdAt DateTime @default(now()) @map("created_at")
  ///ユーザーの更新日
  /// @HideField()
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("user")
}

/// @ObjectType('PostEntity')
model Post {
  /// id
  id          Int        @id @default(autoincrement())
  /// uuid
  uuid        String     @unique @default(uuid())
  /// 記事の作成日
  /// @HideField()
  createdAt   DateTime   @default(now()) @map("created_at")
  /// 記事の更新日
  /// @HideField()
  updatedAt   DateTime   @default(now()) @map("updated_at")
  /// 記事のタイトル
  title       String
  /// 記事の本文
  content     String
  /// 記事が公開しているかどうか
  isPublished Boolean    @default(false) @map("is_published")
  ///記事の公開日
  /// @HideField()
  publishedAt DateTime?  @map("published_at")
  /// 記事の作者
  author      User       @relation(fields: [authorId], references: [id])
  /// 記事の作者のID
  authorId    Int        @map("author_id")
  /// 記事のカテゴリー
  categories  Category[] @relation(references: [id])

  @@map("posts")
}

/// @ObjectType('CategoryEntity')
model Category {
  /// id
  id        Int      @id @default(autoincrement())
  /// uuid
  uuid      String   @unique @default(uuid())
  /// カテゴリー名
  name      String   @unique
  /// カテゴリーに紐付いている記事
  posts     Post[]   @relation(references: [id])
  /// カテゴリーの作成日
  /// @HideField()
  createdAt DateTime @default(now()) @map("created_at")
  // カテゴリーの作成日
  /// @HideField()
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("categories")
}
